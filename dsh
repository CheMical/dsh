#!/bin/sh

# Set up environment for connecting to docker
if test -n "$(uname -a | grep boot2docker)"; then
    # Running inside boot2docker vm
    HOST_IP=$(ifconfig eth0 | grep 'inet addr:' | awk -F: '{print $2}' | awk '{print $1}')
    DOCKER_PARAMS="--add-host boot2docker:$HOST_IP"
    DOCKER_PARAMS="$DOCKER_PARAMS -e DOCKER_HOST=tcp://boot2docker:2376"
    DOCKER_PARAMS="$DOCKER_PARAMS -e DOCKER_CERT_PATH=/etc/docker-certs"
    DOCKER_PARAMS="$DOCKER_PARAMS -e DOCKER_TLS_VERIFY=1"
    DOCKER_PARAMS="$DOCKER_PARAMS -v /var/lib/boot2docker/tls:/etc/docker-certs"
else
    # Using docker on some other system
    DOCKER_PARAMS=" -v /var/run/docker.sock:/var/run/docker.sock"
    if test ! -z $DOCKER_CERT_PATH; then
        DOCKER_PARAMS="$DOCKER_PARAMS -v $DOCKER_CERT_PATH:/etc/docker-certs"
        DOCKER_PARAMS="$DOCKER_PARAMS -e DOCKER_CERT_PATH=/etc/docker-certs"
    fi

    if test ! -z $DOCKER_TLS_VERIFY ; then
        DOCKER_PARAMS="$DOCKER_PARAMS -e DOCKER_TLS_VERIFY=$DOCKER_TLS_VERIFY"
    fi

    if test -f $HOME/.gitconfig; then
        DOCKER_OPTS=" -v $HOME/.gitconfig:/workspace/.gitconfig"
    fi
    if test -n "$SSH_AUTH_SOCK"; then
        DOCKER_OPTS="$DOCKER_OPTS -v $(dirname $SSH_AUTH_SOCK):/tmp/ssh-agent"
        DOCKER_OPTS="$DOCKER_OPTS -e SSH_AUTH_SOCK=/tmp/ssh-agent/$(basename $SSH_AUTH_SOCK)"
    fi
fi

DSH_IMAGE=dsh
if test "$1" = 'build' -o -z "$(docker images | grep '^dsh[[:space:]]')"; then
    echo 'Docker image not found. Rebuilding.'
    docker build -t dsh - <<END_DOCKERFILE
FROM phusion/baseimage

RUN apt-get update
RUN apt-get install -y curl
RUN apt-get install runit
RUN curl -sSL https://get.docker.com/ubuntu/ | sh

# Workaround for broken PAM, see https://github.com/phusion/baseimage-docker/issues/181
RUN apt-get -y build-dep pam
RUN export CONFIGURE_OPTS=--disable-audit && cd /root && apt-get -b source pam && dpkg -i libpam-doc*.deb libpam-modules*.deb libpam-runtime*.deb libpam0g*.deb
CMD perl -pe s{root:/root}{root:/workspace} -i /etc/passwd && login -p -f root
RUN apt-get -y install joe wget
EXPOSE 8080
END_DOCKERFILE
fi

if docker images | grep -e '^dsh-custom[[:space:]]' >/dev/null; then
    DSH_IMAGE=dsh-custom
fi


# Set up data container for workspace (if it doesn't exist already)
docker run --name dsh-ws -v /workspace busybox true 2>/dev/null

# Start samba file sharing (if it hasn't started already)
RUNNING=$(docker inspect --format "{{.State.Running}}" samba-server 2>/dev/null)
if test ${RUNNING:-false} = false; then
    docker run -e USER=root -e USERID=0 --rm -v "$(which docker):/docker" -v /var/run/docker.sock:/docker.sock svendowideit/samba dsh-ws
fi

# Now run the docker shell container
docker run $DOCKER_PARAMS \
    -t -i \
    $DOCKER_OPTS \
    --volumes-from dsh-ws \
    --rm \
    $DSH_IMAGE

